/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPCTLSCD_H_RPCGEN
#define	_RPCTLSCD_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif


struct rpctlscd_connect_arg {
	struct {
		u_int certname_len;
		char *certname_val;
	} certname;
};
typedef struct rpctlscd_connect_arg rpctlscd_connect_arg;

struct rpctlscd_connect_res {
	uint32_t reterr;
	uint64_t sec;
	uint64_t usec;
	uint64_t ssl;
};
typedef struct rpctlscd_connect_res rpctlscd_connect_res;

struct rpctlscd_handlerecord_arg {
	uint64_t sec;
	uint64_t usec;
	uint64_t ssl;
};
typedef struct rpctlscd_handlerecord_arg rpctlscd_handlerecord_arg;

struct rpctlscd_handlerecord_res {
	uint32_t reterr;
};
typedef struct rpctlscd_handlerecord_res rpctlscd_handlerecord_res;

struct rpctlscd_disconnect_arg {
	uint64_t sec;
	uint64_t usec;
	uint64_t ssl;
};
typedef struct rpctlscd_disconnect_arg rpctlscd_disconnect_arg;

struct rpctlscd_disconnect_res {
	uint32_t reterr;
};
typedef struct rpctlscd_disconnect_res rpctlscd_disconnect_res;

#define	RPCTLSCD ((unsigned long)(0x40677374))
#define	RPCTLSCDVERS ((unsigned long)(1))

extern  void rpctlscd_1(struct svc_req *rqstp, SVCXPRT *transp);
#define	RPCTLSCD_NULL ((unsigned long)(0))
extern  enum clnt_stat rpctlscd_null_1(void *, void *, CLIENT *);
extern  bool_t rpctlscd_null_1_svc(void *, void *, struct svc_req *);
#define	RPCTLSCD_CONNECT ((unsigned long)(1))
extern  enum clnt_stat rpctlscd_connect_1(rpctlscd_connect_arg *, rpctlscd_connect_res *, CLIENT *);
extern  bool_t rpctlscd_connect_1_svc(rpctlscd_connect_arg *, rpctlscd_connect_res *, struct svc_req *);
#define	RPCTLSCD_HANDLERECORD ((unsigned long)(2))
extern  enum clnt_stat rpctlscd_handlerecord_1(rpctlscd_handlerecord_arg *, rpctlscd_handlerecord_res *, CLIENT *);
extern  bool_t rpctlscd_handlerecord_1_svc(rpctlscd_handlerecord_arg *, rpctlscd_handlerecord_res *, struct svc_req *);
#define	RPCTLSCD_DISCONNECT ((unsigned long)(3))
extern  enum clnt_stat rpctlscd_disconnect_1(rpctlscd_disconnect_arg *, rpctlscd_disconnect_res *, CLIENT *);
extern  bool_t rpctlscd_disconnect_1_svc(rpctlscd_disconnect_arg *, rpctlscd_disconnect_res *, struct svc_req *);
extern int rpctlscd_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

/* the xdr functions */
extern  bool_t xdr_rpctlscd_connect_arg(XDR *, rpctlscd_connect_arg*);
extern  bool_t xdr_rpctlscd_connect_res(XDR *, rpctlscd_connect_res*);
extern  bool_t xdr_rpctlscd_handlerecord_arg(XDR *, rpctlscd_handlerecord_arg*);
extern  bool_t xdr_rpctlscd_handlerecord_res(XDR *, rpctlscd_handlerecord_res*);
extern  bool_t xdr_rpctlscd_disconnect_arg(XDR *, rpctlscd_disconnect_arg*);
extern  bool_t xdr_rpctlscd_disconnect_res(XDR *, rpctlscd_disconnect_res*);

#ifdef __cplusplus
}
#endif

#endif /* !_RPCTLSCD_H_RPCGEN */
